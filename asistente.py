import streamlit as st
import re
import openai
import os

# Configuraci√≥n de p√°gina
st.set_page_config(
    page_title="Asistente de Investigaci√≥n Inteligente",
    page_icon="üî¨",
    layout="wide"
)

# CSS personalizado
st.markdown("""
<style>
.main-header {
    text-align: center;
    padding: 25px;
    background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
    color: white;
    border-radius: 15px;
    margin-bottom: 25px;
}
.chat-container {
    background: #f8f9fa;
    padding: 20px;
    border-radius: 10px;
    margin: 10px 0;
}
.user-message {
    background: #e3f2fd;
    padding: 15px;
    border-radius: 10px;
    margin: 5px 0;
}
.assistant-message {
    background: white;
    padding: 15px;
    border-radius: 10px;
    margin: 5px 0;
    border-left: 4px solid #667eea;
}
.feature-card {
    background: #f8f9fa;
    padding: 20px;
    border-radius: 10px;
    border-left: 4px solid #667eea;
    margin: 10px 0;
}
.ia-feature {
    background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
    color: white;
    padding: 20px;
    border-radius: 10px;
    margin: 10px 0;
}
</style>
""", unsafe_allow_html=True)

# Header principal
st.markdown("""
<div class="main-header">
    <h1>üî¨ Asistente de Investigaci√≥n Acad√©mica Inteligente</h1>
    <p style="margin: 0; font-size: 1.2em;">Herramienta con IA para el desarrollo de proyectos de investigaci√≥n</p>
    <p style="margin: 10px 0 0 0; font-size: 1em;">ü§ñ Con tecnolog√≠a GPT-4 | ‚úÖ Sistema funcionando correctamente</p>
</div>
""", unsafe_allow_html=True)

# Definici√≥n de prompt base para el asistente IA
PROMPT_BASE = """
Eres un investigador acad√©mico senior especializado en metodolog√≠a de investigaci√≥n. Sigue ESTRICTAMENTE estas directivas:

1. ESTRUCTURA: Respetar exactamente la estructura solicitada (p√°rrafos, longitud, formato)
2. EXTENSI√ìN: Cumplir con el n√∫mero exacto de p√°rrafos y l√≠neas solicitadas
3. CITAS: Incluir referencias verificables con autores reales, a√±os y fuentes
4. COHERENCIA: Mantener hilo conductor acad√©mico entre todos los p√°rrafos
5. PROFUNDIDAD: Desarrollar cada punto con rigor acad√©mico y precisi√≥n conceptual

FORMATO OBLIGATORIO:
- Cada p√°rrafo: 8-10 l√≠neas de contenido sustancial
- Citas en formato APA con autores verificables
- Lenguaje acad√©mico formal pero claro
- Numeraci√≥n de p√°rrafos cuando se solicite
"""

Consulta o instrucci√≥n del usuario:
"""

# Funci√≥n para generar la respuesta del agente IA
def generar_respuesta_ia(mensaje_usuario, contexto=""):
    prompt_completo = PROMPT_BASE + mensaje_usuario
    if contexto:
        prompt_completo += f"\n\nContexto adicional: {contexto}"
    
    try:
        # Nota: Necesitar√°s configurar tu API key de OpenAI
        # openai.api_key = st.secrets["OPENAI_API_KEY"]
        
        respuesta = openai.ChatCompletion.create(
            model="gpt-4",  # Puedes cambiar a "gpt-3.5-turbo" si prefieres
            messages=[
                {"role": "system", "content": PROMPT_BASE},
                {"role": "user", "content": mensaje_usuario}
            ],
            max_tokens=1500,
            temperature=0.7
        )
        return respuesta['choices'][0]['message']['content']
    except Exception as e:
       
        return f"""**Respuesta del Asistente IA:**

Parece que hay un problema con la conexi√≥n a la API de OpenAI. Error: {str(e)}

**Mientras tanto, aqu√≠ tienes una gu√≠a general:**

Para consultas sobre '{mensaje_usuario}', te recomiendo:

**Fuentes acad√©micas sugeridas:**
- Google Scholar para b√∫squeda de art√≠culos cient√≠ficos
- Scopus y Web of Science para literatura especializada
- ScienceDirect y JSTOR para acceso a textos completos

**Enfoque de investigaci√≥n recomendado:**
1. Realiza una revisi√≥n sistem√°tica de literatura
2. Identifica los autores m√°s citados en el √°rea
3. Analiza las metodolog√≠as predominantes
4. Establece tu marco te√≥rico y conceptual

**Pr√≥ximos pasos:**
- Define claramente tu pregunta de investigaci√≥n
- Selecciona la metodolog√≠a apropiada
- Establece tus criterios de inclusi√≥n/exclusi√≥n
- Planifica tu estrategia de b√∫squeda bibliogr√°fica

*Para usar la funcionalidad completa de IA, necesitar√°s configurar una API key de OpenAI.*"""

**Mientras tanto, aqu√≠ tienes una gu√≠a general:**

Para consultas sobre '{mensaje_usuario}', te recomiendo:

üìö **Fuentes acad√©micas sugeridas:**
- Google Scholar para b√∫squeda de art√≠culos cient√≠ficos
- Scopus y Web of Science para literatura especializada
- ScienceDirect y JSTOR para acceso a textos completos

üîç **Enfoque de investigaci√≥n recomendado:**
1. Realiza una revisi√≥n sistem√°tica de literatura
2. Identifica los autores m√°s citados en el √°rea
3. Analiza las metodolog√≠as predominantes
4. Establece tu marco te√≥rico y conceptual

üí° **Pr√≥ximos pasos:**
- Define claramente tu pregunta de investigaci√≥n
- Selecciona la metodolog√≠a apropiada
- Establece tus criterios de inclusi√≥n/exclusi√≥n
- Planifica tu estrategia de b√∫squeda bibliogr√°fica

*Para usar la funcionalidad completa de IA, necesitar√°s configurar una API key de OpenAI.*"""

# Inicializar session state
if 'chat_history' not in st.session_state:
    st.session_state.chat_history = []
if 'contexto_actual' not in st.session_state:
    st.session_state.contexto_actual = ""
if 'modo_ia' not in st.session_state:
    st.session_state.modo_ia = False

# Funciones de procesamiento de lenguaje
def extraer_tema_principal(user_input):
    """Extrae el tema real de investigaci√≥n del input del usuario"""
    try:
        # Patr√≥n para detectar preguntas de investigaci√≥n
        patron_pregunta = r'[¬ø]?(qu√©|cu√°les|c√≥mo|por qu√©|d√≥nde|cu√°ndo)\s+([^?]+)[?]'
        coincidencia = re.search(patron_pregunta, user_input.lower())
        
        if coincidencia:
            return coincidencia.group(2).strip()
        
        # Eliminar palabras de solicitud metodol√≥gica
        palabras_excluir = ['formula', 'planteamiento', 'problema', 'interrogante', 
                           'redacta', 'elabora', 'desarrolla', 'haz', 'crea', 'genera',
                           'para la', 'sobre', 'acerca de', 'necesito', 'quiero', 'dame']
        
        tema = user_input.lower()
        for palabra in palabras_excluir:
            tema = tema.replace(palabra, '')
        
        # Limpiar espacios extras y caracteres especiales
        tema = re.sub(r'[^\w\s]', '', tema)
        tema = ' '.join(tema.split())
        
        return tema.strip() if tema.strip() else user_input
    except Exception:
        return user_input

def detectar_tipo_solicitud(user_input):
    """Detecta el tipo de solicitud del usuario"""
    input_lower = user_input.lower()
    
    if any(palabra in input_lower for palabra in ['planteamiento', 'problema', 'pregunta investigaci√≥n']):
        return "planteamiento"
    elif any(palabra in input_lower for palabra in ['objetivos', 'metas', 'prop√≥sitos']):
        return "objetivos"
    elif any(palabra in input_lower for palabra in ['metodolog√≠a', 'm√©todo', 'dise√±o', 'enfoque']):
        return "metodologia"
    elif any(palabra in input_lower for palabra in ['variables', 'operacional']):
        return "variables"
    else:
        return "general"

# Funciones de generaci√≥n de contenido MEJORADAS
def generar_planteamiento_estructurado(tema, contexto=""):
    """Genera un planteamiento del problema bien estructurado con excelente redacci√≥n"""
    
    planteamiento = f"""
# üéØ PLANTEAMIENTO DEL PROBLEMA: {tema.title()}

## üìù DESCRIPCI√ìN DEL PROBLEMA

En el contexto actual caracterizado por la r√°pida evoluci√≥n tecnol√≥gica y las transformaciones sociales, se ha identificado una problem√°tica significativa en el √°mbito de **{tema}**. La disyunci√≥n existente entre las demandas emergentes y las capacidades actuales genera consecuencias relevantes que merecen atenci√≥n investigativa.

## üîç JUSTIFICACI√ìN DE LA INVESTIGACI√ìN

El estudio de {tema} se justifica por las siguientes consideraciones fundamentales:

1. **Relevancia contempor√°nea**: Constituye un tema de actualidad en el marco de los procesos de transformaci√≥n digital y social.
2. **Impacto multidimensional**: Sus efectos repercuten en diversos √°mbitos: social, econ√≥mico, educativo y organizacional.
3. **Vac√≠o en la literatura**: Existe una necesidad evidente de investigaciones actualizadas que aborden esta tem√°tica desde perspectivas innovadoras.
4. **Aplicabilidad pr√°ctica**: Los hallazgos pueden traducirse en estrategias concretas y soluciones aplicables.

## üìå DELIMITACI√ìN DEL ESTUDIO

Esta investigaci√≥n se circunscribir√° a:
- **√Åmbito tem√°tico**: Aspectos espec√≠ficos relacionados con {tema}
- **Contexto de aplicaci√≥n**: {contexto if contexto else "entornos diversos y representativos"}
- **Enfoque metodol√≥gico**: An√°lisis integral seguido de propuestas de mejora

## ‚ùì PREGUNTAS DE INVESTIGACI√ìN

1. ¬øCu√°les son los factores determinantes que influyen significativamente en {tema}?
2. ¬øQu√© impacto observable genera {tema} en los diferentes contextos de aplicaci√≥n?
3. ¬øQu√© estrategias y metodolog√≠as demostrar√≠an mayor efectividad para optimizar los resultados asociados a {tema}?
4. ¬øQu√© brechas de conocimiento y oportunidades de desarrollo futuro pueden identificarse en este campo de estudio?

*Contexto espec√≠fico considerado: {contexto if contexto else "√°mbito general de aplicaci√≥n"}*
"""
    return planteamiento

def generar_objetivos_estructurados(tema, contexto=""):
    """Genera objetivos de investigaci√≥n estructurados con redacci√≥n acad√©mica"""
    contexto_texto = contexto if contexto else "diversos escenarios y contextos de aplicaci√≥n"
    
    objetivos = f"""
# üéØ OBJETIVOS DE INVESTIGACI√ìN: {tema.title()}

## üéØ OBJETIVO GENERAL

Analizar sistem√°ticamente los aspectos fundamentales de **{tema}** en el contexto de **{contexto_texto}**, con el prop√≥sito de formular estrategias de mejora, innovaci√≥n y optimizaci√≥n que contribuyan al avance del conocimiento y la pr√°ctica en este campo de estudio.

## üìã OBJETIVOS ESPEC√çFICOS

1. **Identificar y caracterizar** los componentes, dimensiones y variables clave asociados con {tema}, estableciendo un marco conceptual robusto que facilite su comprensi√≥n integral.

2. **Diagnosticar el estado actual** de {tema} mediante el an√°lisis exhaustivo de tendencias, pr√°cticas predominantes y desaf√≠os identificados tanto en la literatura especializada como en contextos reales de aplicaci√≥n.

3. **Evaluar el impacto** de {tema} en diferentes √°mbitos (social, econ√≥mico, educativo, organizacional), considerando variables contextuales y caracter√≠sticas poblacionales espec√≠ficas.

4. **Dise√±ar y proponer** estrategias, metodolog√≠as o herramientas innovadoras para la optimizaci√≥n de {tema}, fundamentadas en evidencia emp√≠rica y mejores pr√°cticas identificadas.

5. **Validar la aplicabilidad** de las propuestas formuladas mediante criterios de factibilidad, sostenibilidad y alineamiento con necesidades identificadas en el contexto de {contexto_texto}.
"""
    return objetivos

# Funci√≥n principal del chat MEJORADA con IA
def procesar_consulta_usuario(user_input, contexto="", usar_ia=False):
    """Procesa la consulta del usuario y genera respuesta con excelente redacci√≥n"""
    try:
        # Extraer tema y tipo de solicitud
        tema_real = extraer_tema_principal(user_input)
        tipo_solicitud = detectar_tipo_solicitud(user_input)
        
        # Mostrar informaci√≥n de contexto
        st.info(f"üîç **Tema detectado:** {tema_real}")
        if contexto:
            st.info(f"üéØ **Contexto considerado:** {contexto}")
        if usar_ia:
            st.success("ü§ñ **Modo IA activado** - Generando respuesta con inteligencia artificial")
        
        # Si el modo IA est√° activado, usar la funci√≥n de IA
        if usar_ia:
            with st.spinner("ü§ñ Consultando con IA..."):
                respuesta = generar_respuesta_ia(user_input, contexto)
                return respuesta
        
        # Si no, usar las funciones predefinidas
        if tipo_solicitud == "planteamiento":
            respuesta = generar_planteamiento_estructurado(tema_real, contexto)
        elif tipo_solicitud == "objetivos":
            respuesta = generar_objetivos_estructurados(tema_real, contexto)
        elif tipo_solicitud == "metodologia":
            respuesta = f"""
## üéì SUGERENCIAS METODOL√ìGICAS PARA: {tema_real.title()}

### **ENFOQUE METODOL√ìGICO RECOMENDADO**
**Investigaci√≥n Mixta de Dise√±o Secuencial Explicativo** - Combina m√©todos cuantitativos y cualitativos para un an√°lisis comprehensivo.

### **DISE√ëO DE INVESTIGACI√ìN**
- **Tipo**: Secuencial explicativo
- **Fase 1**: An√°lisis cuantitativo (encuestas, datos secundarios)
- **Fase 2**: Profundizaci√≥n cualitativa (entrevistas, estudios de caso)

### **T√âCNICAS DE RECOLECCI√ìN**
- üìä Encuestas con escalas Likert validadas
- üé§ Entrevistas semiestructuradas
- üìë An√°lisis documental sistem√°tico
- üë• Grupos focales para triangulaci√≥n

*Contexto: {contexto if contexto else "diversos escenarios de aplicaci√≥n"}*
"""
        elif tipo_solicitud == "variables":
            respuesta = f"""
## üî¨ VARIABLES DE INVESTIGACI√ìN PARA: {tema_real.title()}

### **VARIABLES INDEPENDIENTES**
- Factores influyentes en {tema_real}
- Estrategias implementadas
- Caracter√≠sticas contextuales

### **VARIABLES DEPENDIENTES**
- Resultados observables
- Impacto medible
- Efectividad de intervenciones

### **VARIABLES DE CONTROL**
- Contexto espec√≠fico
- Caracter√≠sticas poblacionales
- Recursos disponibles

*Contexto: {contexto}*
"""
        else:
            respuesta = f"""
## üí° ASESOR√çA ESPECIALIZADA EN INVESTIGACI√ìN: {tema_real.title()}

He analizado su consulta sobre **"{tema_real}"** y puedo ofrecerle orientaci√≥n en:

### üéØ **ENFOQUES RECOMENDADOS:**
- **Investigaci√≥n exploratoria**: Para caracterizar el fen√≥meno
- **Investigaci√≥n explicativa**: Para identificar relaciones causales
- **Investigaci√≥n aplicada**: Para desarrollar soluciones pr√°cticas

### üìä **ASPECTOS CLAVE:**
- Definici√≥n clara del problema de investigaci√≥n
- Establecimiento de preguntas gu√≠a
- Selecci√≥n de metodolog√≠a apropiada
- Operacionalizaci√≥n de variables

### üîç **PR√ìXIMOS PASOS:**
1. B√∫squeda bibliogr√°fica especializada
2. Delimitaci√≥n del marco te√≥rico-conceptual
3. Formulaci√≥n de hip√≥tesis o preguntas
4. Dise√±o metodol√≥gico detallado

**¬øLe gustar√≠a que profundice en alg√∫n aspecto espec√≠fico?**
"""
        
        return respuesta
        
    except Exception as e:
        return f"‚ùå Se ha producido un error en el procesamiento: {str(e)}"

# Interfaz principal con pesta√±as
tab1, tab2, tab3 = st.tabs(["üè† Inicio", "üîç B√∫squeda R√°pida", "üí¨ Chat Inteligente"])

with tab1:
    st.markdown("## üöÄ Bienvenido al Asistente de Investigaci√≥n con IA")
    
    col1, col2 = st.columns([2, 1])
    
    with col1:
        st.markdown("""
        <div class="ia-feature">
        <h4>ü§ñ ASISTENTE CON INTELIGENCIA ARTIFICIAL</h4>
        <p>Ahora potenciado con GPT-4 para respuestas m√°s inteligentes, contextualizadas y fundamentadas acad√©micamente.</p>
        </div>
        """, unsafe_allow_html=True)
        
        st.markdown("""
        <div class="feature-card">
        <h4>üí¨ Chatbot Inteligente con Procesamiento de Lenguaje Natural</h4>
        <p>Sistema avanzado de comprensi√≥n ling√º√≠stica para interpretar sus solicitudes de investigaci√≥n y generar respuestas contextualizadas y acad√©micamente rigurosas.</p>
        </div>
        """, unsafe_allow_html=True)
        
        st.markdown("""
        <div class="feature-card">
        <h4>üéØ Generaci√≥n de Elementos de Investigaci√≥n Acad√©mica</h4>
        <p>Elaboraci√≥n autom√°tica de planteamientos de problema, objetivos de investigaci√≥n, metodolog√≠as y variables operativas con redacci√≥n acad√©mica profesional.</p>
        </div>
        """, unsafe_allow_html=True)
        
        st.markdown("""
        <div class="feature-card">
        <h4>üìö Asesor√≠a Metodol√≥gica Especializada</h4>
        <p>Orientaci√≥n experta en dise√±o de investigaci√≥n, selecci√≥n de m√©todos y t√©cnicas de an√°lisis adecuadas para cada tipo de estudio.</p>
        </div>
        """, unsafe_allow_html=True)
    
    with col2:
        st.markdown("### üéØ C√≥mo utilizar el sistema:")
        
        st.markdown("""
        <div style="background: #e8f4fd; padding: 15px; border-radius: 10px; margin: 10px 0;">
        <h4>1. üí¨ Acceder al Chat Inteligente</h4>
        <p>Dir√≠jase a la pesta√±a "Chat Inteligente"</p>
        </div>
        """, unsafe_allow_html=True)
        
        st.markdown("""
        <div style="background: #e8f4fd; padding: 15px; border-radius: 10px; margin: 10px 0;">
        <h4>2. ü§ñ Activar el modo IA (Opcional)</h4>
        <p>Active el interruptor para respuestas con inteligencia artificial</p>
        </div>
        """, unsafe_allow_html=True)
        
        st.markdown("""
        <div style="background: #e8f4fd; padding: 15px; border-radius: 10px; margin: 10px 0;">
        <h4>3. üéØ Formular su consulta</h4>
        <p>Ejemplo:<br>
        <em>"Analice las tendencias actuales en educaci√≥n virtual"</em></p>
        </div>
        """, unsafe_allow_html=True)
        
        st.markdown("### üí° Ejemplos de consultas con IA:")
        st.code("""
"Revise la literatura sobre competencias 
digitales docentes y sugiera referencias APA"

"Analice metodolog√≠as mixtas para estudiar 
el impacto de redes sociales en adolescentes"

"Proponga un marco te√≥rico para investigaci√≥n 
en inteligencia artificial educativa"
        """)

with tab2:
    st.markdown("## üîç B√∫squeda R√°pida y Generaci√≥n de Contenido")
    
    col_search1, col_search2 = st.columns([2, 1])
    
    with col_search1:
        tema_consulta = st.text_input(
            "üîé Tema de investigaci√≥n principal:",
            placeholder="Ej: competencias digitales, inteligencia artificial educativa...",
            value="competencias digitales en entornos educativos"
        )
    
    with col_search2:
        contexto_consulta = st.text_input(
            "üéØ Contexto espec√≠fico:",
            placeholder="Ej: educaci√≥n superior, empresas tecnol√≥gicas...",
            value="instituciones de educaci√≥n superior"
        )
    
    st.markdown("---")
    
    # Botones de generaci√≥n r√°pida
    col_btn1, col_btn2, col_btn3, col_btn4 = st.columns(4)
    
    with col_btn1:
        if st.button("üß© Generar Planteamiento", use_container_width=True):
            with st.spinner("Generando planteamiento del problema..."):
                respuesta = generar_planteamiento_estructurado(tema_consulta, contexto_consulta)
                st.markdown(respuesta)
    
    with col_btn2:
        if st.button("üéØ Generar Objetivos", use_container_width=True):
            with st.spinner("Generando objetivos de investigaci√≥n..."):
                respuesta = generar_objetivos_estructurados(tema_consulta, contexto_consulta)
                st.markdown(respuesta)
    
    with col_btn3:
        if st.button("üî¨ Generar Metodolog√≠a", use_container_width=True):
            with st.spinner("Generando sugerencias metodol√≥gicas..."):
                respuesta = f"""
## üéì SUGERENCIAS METODOL√ìGICAS PARA: {tema_consulta.title()}

### **ENFOQUE RECOMENDADO**
Investigaci√≥n mixta con dise√±o secuencial explicativo.

### **T√âCNICAS DE RECOLECCI√ìN**
- Encuestas cuantitativas
- Entrevistas cualitativas
- An√°lisis documental
- Observaci√≥n sistem√°tica

*Contexto: {contexto_consulta}*
"""
                st.markdown(respuesta)
    
    with col_btn4:
        if st.button("üìä Generar Variables", use_container_width=True):
            with st.spinner("Generando variables de investigaci√≥n..."):
                respuesta = f"""
## üî¨ VARIABLES PARA: {tema_consulta.title()}

### **VARIABLES INDEPENDIENTES**
- Factores contextuales
- Estrategias implementadas
- Recursos disponibles

### **VARIABLES DEPENDIENTES**
- Resultados observables
- Impacto medible
- Efectividad

*Contexto: {contexto_consulta}*
"""
                st.markdown(respuesta)

with tab3:
    st.markdown("## üí¨ Chat Inteligente con IA")
    
    # Configuraci√≥n del contexto y modo IA
    col_config1, col_config2 = st.columns([2, 1])
    
    with col_config1:
        contexto_chat = st.text_input(
            "üéØ Contexto de investigaci√≥n para esta conversaci√≥n:",
            placeholder="Ej: mi tesis de maestr√≠a, investigaci√≥n en educaci√≥n superior...",
            value="proyecto de investigaci√≥n acad√©mica"
        )
    
    with col_config2:
        # Interruptor para modo IA
        modo_ia = st.toggle("ü§ñ Activar modo IA", value=False)
        st.session_state.modo_ia = modo_ia
    
    # Bot√≥n para limpiar chat
    col_clear, col_stats = st.columns([1, 3])
    with col_clear:
        if st.button("üîÑ Limpiar Conversaci√≥n", use_container_width=True):
            st.session_state.chat_history = []
            st.rerun()
    
    with col_stats:
        if st.session_state.chat_history:
            st.info(f"üí¨ Conversaci√≥n activa: {len(st.session_state.chat_history)//2} intercambios")
        if st.session_state.modo_ia:
            st.success("ü§ñ Modo IA activado - Respuestas con inteligencia artificial")
    
    st.markdown("---")
    
    # Mostrar historial del chat
    for mensaje in st.session_state.chat_history:
        if mensaje["role"] == "user":
            st.markdown(f"""
            <div class="user-message">
                <strong>üë§ Usted:</strong><br>
                {mensaje["content"]}
            </div>
            """, unsafe_allow_html=True)
        else:
            st.markdown(f"""
            <div class="assistant-message">
                <strong>üî¨ Asistente:</strong><br>
                {mensaje["content"]}
            </div>
            """, unsafe_allow_html=True)
    
    # Ejemplos r√°pidos para probar
    st.markdown("### üí° Ejemplos para probar:")
    col_ex1, col_ex2, col_ex3, col_ex4 = st.columns(4)
    
    with col_ex1:
        if st.button("üß© Planteamiento", use_container_width=True):
            st.session_state.ejemplo_activo = "Formule el planteamiento del problema sobre competencias digitales para la empleabilidad en la era digital"
    
    with col_ex2:
        if st.button("üéØ Objetivos", use_container_width=True):
            st.session_state.ejemplo_activo = "Genere objetivos de investigaci√≥n sobre la implementaci√≥n de inteligencia artificial en instituciones educativas"
    
    with col_ex3:
        if st.button("üî¨ Metodolog√≠a", use_container_width=True):
            st.session_state.ejemplo_activo = "Sugiera una metodolog√≠a para investigar el impacto de las redes sociales en el aprendizaje de adolescentes"
    
    with col_ex4:
        if st.button("üìö Con IA", use_container_width=True):
            st.session_state.ejemplo_activo = "Analice las tendencias actuales en educaci√≥n virtual y sugiera referencias bibliogr√°ficas recientes en formato APA"
    
    # Input del chat
    prompt = st.chat_input("Escriba su pregunta o solicitud de investigaci√≥n...")
    
    # Manejar ejemplo predefinido
    if hasattr(st.session_state, 'ejemplo_activo'):
        prompt = st.session_state.ejemplo_activo
        del st.session_state.ejemplo_activo
    
    if prompt:
        # Agregar mensaje del usuario al historial
        st.session_state.chat_history.append({"role": "user", "content": prompt})
        
        # Mostrar mensaje del usuario inmediatamente
        with st.chat_message("user"):
            st.markdown(prompt)
        
        # Generar y mostrar respuesta
        with st.chat_message("assistant"):
            with st.spinner("ü§î Analizando su consulta..."):
                respuesta = procesar_consulta_usuario(prompt, contexto_chat, st.session_state.modo_ia)
                st.markdown(respuesta)
        
        # Agregar respuesta al historial
        st.session_state.chat_history.append({"role": "assistant", "content": respuesta})

# Configuraci√≥n de API Key - SEGURA
with st.sidebar.expander("üîß Configuraci√≥n de API OpenAI", expanded=False):
    st.info("Para uso personal - configura tu API key temporalmente")
    
    # Opci√≥n 1: Usar secrets de Streamlit (recomendado)
    try:
        if st.secrets["openai_api_key"]:
            openai.api_key = st.secrets["openai_api_key"]
            st.success("‚úÖ API Key configurada (v√≠a secrets)")
            st.session_state.api_key_configurada = True
    except:
        # Opci√≥n 2: Input temporal (solo para esta sesi√≥n)
        api_key = st.text_input("API Key Temporal:", type="password", placeholder="sk-...", key="api_key_temp")
        if api_key:
            openai.api_key = api_key
            st.success("‚úÖ API Key temporal configurada")
            st.warning("‚ö†Ô∏è Esta key solo funciona en tu sesi√≥n actual")
            st.session_state.api_key_configurada = True
        else:
            st.warning("üîí Modo IA no disponible - Configura tu API key")
    
    st.markdown("---")
    st.markdown("**¬øNo tienes API Key?**")
    st.markdown("[Obtener API Key de OpenAI](https://platform.openai.com/api-keys)")

# Footer
st.markdown("---")
st.markdown(
    "<div style='text-align: center; color: #666;'>"
    "üî¨ Asistente de Investigaci√≥n Acad√©mica Inteligente | "
    "ü§ñ Con tecnolog√≠a GPT-4 | "
    "‚úÖ Sistema funcionando correctamente"
    "</div>", 
    unsafe_allow_html=True
)




